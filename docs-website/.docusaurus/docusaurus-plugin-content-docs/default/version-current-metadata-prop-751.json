{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "docsSidebar": [
      {
        "type": "link",
        "label": "About",
        "href": "/docs/",
        "docId": "README",
        "unlisted": false
      },
      {
        "type": "category",
        "label": "Tutorials",
        "items": [
          {
            "type": "link",
            "label": "Verifying an Artifact with a Witness Policy",
            "href": "/docs/docs/tutorials/artifact-policy",
            "docId": "docs/tutorials/artifact-policy",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Getting Started",
            "href": "/docs/docs/tutorials/getting-started",
            "docId": "docs/tutorials/getting-started",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Signing Attestations with Sigstore Keyless",
            "href": "/docs/docs/tutorials/sigstore-keyless",
            "docId": "docs/tutorials/sigstore-keyless",
            "unlisted": false
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "category",
        "label": "Concepts",
        "items": [
          {
            "type": "link",
            "label": "Attestors",
            "href": "/docs/docs/concepts/attestor",
            "docId": "docs/concepts/attestor",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Configuration",
            "href": "/docs/docs/concepts/config",
            "docId": "docs/concepts/config",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Policies",
            "href": "/docs/docs/concepts/policy",
            "docId": "docs/concepts/policy",
            "unlisted": false
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "category",
        "label": "Attestor Types",
        "items": [
          {
            "type": "link",
            "label": "AWS Instance Identity Attestor",
            "href": "/docs/docs/attestors/aws-iid",
            "docId": "docs/attestors/aws-iid",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Command Attestor",
            "href": "/docs/docs/attestors/commandrun",
            "docId": "docs/attestors/commandrun",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Environment Attestor",
            "href": "/docs/docs/attestors/environment",
            "docId": "docs/attestors/environment",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "GCP Instance Identity Attestor",
            "href": "/docs/docs/attestors/gcp-iit",
            "docId": "docs/attestors/gcp-iit",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Git Attestor",
            "href": "/docs/docs/attestors/git",
            "docId": "docs/attestors/git",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "GitLab Attestor",
            "href": "/docs/docs/attestors/gitlab",
            "docId": "docs/attestors/gitlab",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "JWT Attestor",
            "href": "/docs/docs/attestors/jwt",
            "docId": "docs/attestors/jwt",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Material Attestor",
            "href": "/docs/docs/attestors/material",
            "docId": "docs/attestors/material",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Maven Attestor",
            "href": "/docs/docs/attestors/maven",
            "docId": "docs/attestors/maven",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "OCI Attestor",
            "href": "/docs/docs/attestors/oci",
            "docId": "docs/attestors/oci",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "Product Attestor",
            "href": "/docs/docs/attestors/product",
            "docId": "docs/attestors/product",
            "unlisted": false
          }
        ],
        "collapsed": true,
        "collapsible": true
      },
      {
        "type": "link",
        "label": "Command Line Reference",
        "href": "/docs/docs/commands",
        "docId": "docs/commands",
        "unlisted": false
      },
      {
        "type": "link",
        "label": "New Contributor Guide",
        "href": "/docs/CONTRIBUTING",
        "docId": "CONTRIBUTING",
        "unlisted": false
      },
      {
        "type": "link",
        "label": "Code of Conduct",
        "href": "/docs/CODE_OF_CONDUCT",
        "docId": "CODE_OF_CONDUCT",
        "unlisted": false
      }
    ]
  },
  "docs": {
    "CODE_OF_CONDUCT": {
      "id": "CODE_OF_CONDUCT",
      "title": "Contributor Covenant Code of Conduct",
      "description": "Our Pledge",
      "sidebar": "docsSidebar"
    },
    "CONTRIBUTING": {
      "id": "CONTRIBUTING",
      "title": "Contributing to Witness",
      "description": "We welcome contributions from the community and first want to thank you for",
      "sidebar": "docsSidebar"
    },
    "docs/about/how-witness-works": {
      "id": "docs/about/how-witness-works",
      "title": "How Witness Works",
      "description": "Signing"
    },
    "docs/attestors/aws-iid": {
      "id": "docs/attestors/aws-iid",
      "title": "AWS Instance Identity Attestor",
      "description": "The AWS (Amazon Web Services) Instance Identity Attestor communicates with the AWS Instance Metadata to collect",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/commandrun": {
      "id": "docs/attestors/commandrun",
      "title": "Command Attestor",
      "description": "The Command Attestor collects information about a command that TestifySec Witness executes and observes.",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/environment": {
      "id": "docs/attestors/environment",
      "title": "Environment Attestor",
      "description": "The Environment Attestor records the OS, hostname, username, and all environment variables set",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/gcp-iit": {
      "id": "docs/attestors/gcp-iit",
      "title": "GCP Instance Identity Attestor",
      "description": "The Google Cloud Platform (GCP) Instance Identity Attestor communicates with the GCP metadata server to collect information",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/git": {
      "id": "docs/attestors/git",
      "title": "Git Attestor",
      "description": "The Git Attestor records the current state of the objects in the git repository, including untracked objects.",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/gitlab": {
      "id": "docs/attestors/gitlab",
      "title": "GitLab Attestor",
      "description": "The GitLab Attestor records information about the GitLab CI/CD job execution in which",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/jwt": {
      "id": "docs/attestors/jwt",
      "title": "JWT Attestor",
      "description": "The JWT (JSON Web Token) Attestor verifies a JWT against a JWKS (JSON Web Key Set) and records information about the",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/material": {
      "id": "docs/attestors/material",
      "title": "Material Attestor",
      "description": "The Material Attestor records the digests of all files in the working directory of TestifySec Witness",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/maven": {
      "id": "docs/attestors/maven",
      "title": "Maven Attestor",
      "description": "The Maven Attestor records project and dependency information from a provided pom.xml (Maven Project Object Model).",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/oci": {
      "id": "docs/attestors/oci",
      "title": "OCI Attestor",
      "description": "The OCI Attestor records information about a provided Open Container Initiative (OCI) image stored on disk as a tarball.",
      "sidebar": "docsSidebar"
    },
    "docs/attestors/product": {
      "id": "docs/attestors/product",
      "title": "Product Attestor",
      "description": "The Product Attestor examines materials recorded before a command was run and records all",
      "sidebar": "docsSidebar"
    },
    "docs/commands": {
      "id": "docs/commands",
      "title": "Witness CLI Reference",
      "description": "This is the reference for the Witness command line tool, generated by Cobra.",
      "sidebar": "docsSidebar"
    },
    "docs/concepts/attestor": {
      "id": "docs/concepts/attestor",
      "title": "Attestors",
      "description": "A Witness attestor is a programming interface that defines an object that can assert facts about a system and store those facts in a versioned schema. An attestor has a Name, Type and RunType. The Type is a versioned string corresponding to the JSON schema of the attestation. For example, the AWS attestor is defined as follows:",
      "sidebar": "docsSidebar"
    },
    "docs/concepts/config": {
      "id": "docs/concepts/config",
      "title": "Configuration",
      "description": "Witness allows the user to specify a yaml file for persisting the command line flags to be set whenever Witness is invoked. Any values in the configuration file will be overridden by the command line flags set on command invocation.",
      "sidebar": "docsSidebar"
    },
    "docs/concepts/policy": {
      "id": "docs/concepts/policy",
      "title": "Policies",
      "description": "What is a witness policy?",
      "sidebar": "docsSidebar"
    },
    "docs/signers/kms": {
      "id": "docs/signers/kms",
      "title": "KMS Signer",
      "description": "Witness supports signing both attestations (generated with witness run) and policies (signed with witness sign) using a Key Management Service (KMS) key through the provision of a KMS signer. The KMS signer currently supports AWS KMS and GCP KMS. Follow-up support for Azure Key Vault and HashiCorp Vault (with transit engine) is planned."
    },
    "docs/tutorials/artifact-policy": {
      "id": "docs/tutorials/artifact-policy",
      "title": "Verifying an Artifact with a Witness Policy",
      "description": "💡 Tip: If this is your first time using Witness, you might benefit from trying the Getting Started tutorial first!",
      "sidebar": "docsSidebar"
    },
    "docs/tutorials/getting-started": {
      "id": "docs/tutorials/getting-started",
      "title": "Getting Started",
      "description": "Intro",
      "sidebar": "docsSidebar"
    },
    "docs/tutorials/sigstore-keyless": {
      "id": "docs/tutorials/sigstore-keyless",
      "title": "Signing Attestations with Sigstore Keyless",
      "description": "💡 Tip: If this is your first time using Witness, you might benefit from trying the Getting Started tutorial first! You might",
      "sidebar": "docsSidebar"
    },
    "README": {
      "id": "README",
      "title": "Witness",
      "description": "Go Reference Go Report Card OpenSSF Best Practices OpenSSF Scorecard FOSSA Status",
      "sidebar": "docsSidebar"
    }
  }
}