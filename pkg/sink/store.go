package sink

import (
	"context"
	api "github.com/testifysec/archivist-api/pkg/api/archivist"
	"google.golang.org/grpc"
)

type Sink struct {
	conn   *grpc.ClientConn
	client api.CollectorClient
}

// NewClient returns a new collector sink client to store attestations generated by Witness.
func NewClient(opts []grpc.DialOption) Sink {
	serverAddr := "127.0.0.1:8080"
	conn, err := grpc.Dial(serverAddr, opts...)
	if err != nil {
		panic(err)
		//todo
	}
	return Sink{
		client: api.NewCollectorClient(conn),
		conn:   conn,
	}
}

// Store the attestation generated by Witness.
func (s *Sink) Store(attestation string) error {
	r := api.StoreRequest{Object: attestation}
	_, err := s.client.Store(context.TODO(), &r)
	return err
}

// Stop the sink client and terminate its connection gracefully.
func (s *Sink) Stop() error {
	return s.conn.Close()
}
